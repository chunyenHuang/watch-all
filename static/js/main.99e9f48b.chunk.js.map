{"version":3,"sources":["Channels.js","Channel.js","App.js","presetList.js","index.js"],"names":["selectedChannelId","Channels","state","channels","channel","this","props","id","forEach","x","unMute","mute","setState","onChannelsUpdate","map","url","multiStyle","columns","mode","isEditing","Container","className","Row","stylee","index","Col","sm","key","onMouseEnter","isHovered","setTimeout","setChannelsSound","onMouseLeave","InputGroup","Input","placeholder","value","onChange","event","update","target","updateParentChannels","volume","muted","isMuted","playing","width","height","controls","loop","React","Component","Channel","defaultMode","localStorage","getItem","cacheList","defaultList","JSON","parse","title","defaultListIndex","currentChannels","App","useState","isOpen","setIsOpen","setEditing","changeMode","list","updateList","currentListIndex","changeCurrentList","showSaveModal","setSaveModal","newListTitle","setNewListTitle","toggleMute","selectMode","inMode","setItem","selectListItem","toggleSaveModal","saveList","asNew","newList","i","push","stringify","length","useEffect","document","addEventListener","keyCode","Modal","autoFocus","ModalHeader","toggle","ModalBody","ModalFooter","Button","color","onClick","disabled","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","active","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","item","DropdownItem","NavbarText","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.99e9f48b.chunk.js","sourcesContent":["/* eslint-disable require-jsdoc */\nimport React from 'react';\nimport ReactPlayer from 'react-player';\nimport {\n  Container,\n  Row,\n  Col,\n  InputGroup,\n  Input,\n} from 'reactstrap';\n\nimport './Channels.css';\n\nconst MOUSE_DELAY = 1000;\n\nlet selectedChannelId;\nexport default class Channels extends React.Component {\n  state = {\n    selectedChannelId: null,\n    channels: [],\n  }\n  componentDidMount() {}\n\n  setChannelsSound(channel = {}) {\n    const { channels } = this.props;\n\n    selectedChannelId = channel.id;\n\n    channels.forEach((x) => {\n      if (x.id === selectedChannelId) {\n        x.unMute();\n      } else {\n        x.mute();\n      }\n    });\n    this.setState({ selectedChannelId });\n  }\n\n  updateParentChannels() {\n    if (this.props.onChannelsUpdate) {\n      this.props.onChannelsUpdate(this.props.channels.map((x) => x.url));\n    }\n  }\n\n  render() {\n    const { mode, isEditing, channels, mute } = this.props;\n\n    let multiStyle;\n    let columns;\n    switch (mode) {\n    case '3x3':\n      columns = 3;\n      multiStyle = 'multi3x3';\n      break;\n    case '2x2':\n    default:\n      columns = 2;\n      multiStyle = 'multi2x2';\n    }\n\n    const renderCell = (channel, index) => {\n      const onMouseEnter = () => {\n        channel.isHovered = true;\n        if (!selectedChannelId) {\n          this.setChannelsSound(channel);\n        } else {\n          setTimeout(() => {\n            if (channel.isHovered) {\n              this.setChannelsSound(channel);\n            }\n          }, MOUSE_DELAY);\n        }\n      };\n      const onMouseLeave = () => {\n        channel.isHovered = false;\n      };\n      return (\n        <Col\n          sm={12 / columns}\n          key={index}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n        >\n          {isEditing &&\n            <div className=\"edit-container\">\n              <InputGroup>\n                <Input\n                  placeholder=\"YouTube, Facebook, Twitch, SoundCloud, Streamable, Vimeo, Wistia, Mixcloud, and DailyMotion\"\n                  value={channel.url}\n                  onChange={(event)=>{\n                    channel.update(event.target.value);\n                    this.setState({});\n                    this.updateParentChannels();\n                  }}\n                />\n              </InputGroup>\n            </div>}\n          <div className=\"video-wrapper\">\n            <ReactPlayer\n              className=\"react-player\"\n              url={channel.url}\n              volume={1}\n              muted={mute || channel.isMuted} // overwrite mute option\n              playing={true}\n              width='100%'\n              height='100%'\n              controls={true}\n              loop={true}\n            />\n          </div>\n        </Col>);\n    };\n\n    return (\n      <Container className=\"channels-main\">\n        <Row className={multiStyle} stylee={{}}>\n          {channels.map(renderCell)}\n        </Row>\n      </Container>\n    );\n  }\n}\n","/* eslint-disable require-jsdoc */\n\nexport default class Channel {\n  constructor(url, index) {\n    this.id = index;\n    this.url = url;\n\n    this.isMuted = true;\n    this.isHovered = false;\n  }\n\n  update(url) {\n    this.url = url;\n  }\n\n  mute() {\n    this.isMuted = true;\n  }\n\n  unMute() {\n    this.isMuted = false;\n  }\n}\n","/* eslint-disable require-jsdoc */\nimport React, { useState, useEffect } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  InputGroup,\n  Input,\n} from 'reactstrap';\nimport {\n  FaEdit,\n  FaList,\n  FaThLarge,\n  FaTh,\n  FaGithub,\n  FaExclamationCircle,\n  FaSave,\n  FaVolumeUp,\n  FaVolumeMute,\n} from 'react-icons/fa';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Channels from './Channels';\nimport Channel from './Channel';\nimport presetList from './presetList';\n\nconst defaultMode = localStorage.getItem('mode') || '3x3';\nconst cacheList = localStorage.getItem('list');\nconst defaultList = cacheList ? JSON.parse(cacheList) : presetList;\nconst defaultListIndex = localStorage.getItem('listIndex') || 0;\n\nlet currentChannels = defaultList[defaultListIndex].channels.map((url, index) => new Channel(url, index));\n\nconst App = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isEditing, setEditing] = useState(false);\n  const [mode, changeMode] = useState(defaultMode);\n  const [list, updateList] = useState(defaultList);\n  const [currentListIndex, changeCurrentList] = useState(defaultListIndex);\n  const [showSaveModal, setSaveModal] = useState(false);\n  const [newListTitle, setNewListTitle] = useState(defaultList[defaultListIndex].title);\n  const [isMuted, toggleMute] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  const edit = () => {\n    if (isEditing) {\n      toggleSaveModal();\n    }\n    setEditing(!isEditing);\n  };\n\n  const selectMode = (inMode) => {\n    changeMode(inMode);\n    localStorage.setItem('mode', inMode);\n  };\n  const selectListItem = (index) => {\n    changeCurrentList(index);\n    setNewListTitle(list[index].title);\n    localStorage.setItem('listIndex', index);\n\n    currentChannels = list[index].channels.map((url, index) => new Channel(url, index));\n  };\n\n  const toggleSaveModal = () => {\n    setSaveModal(!showSaveModal);\n  };\n\n  const saveList = (asNew = true) => {\n    toggleSaveModal();\n\n    if (asNew) {\n      const newList = {\n        title: newListTitle,\n        channels: currentChannels.map((i) => i.url),\n      };\n      setNewListTitle('');\n\n      list.push(newList);\n    } else {\n      list[currentListIndex].title = newListTitle;\n      list[currentListIndex].channels = currentChannels.map((i) => i.url);\n    }\n\n    updateList(list);\n    localStorage.setItem('list', JSON.stringify(list));\n\n    if (asNew) {\n      selectListItem(list.length - 1);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', (event) => {\n      if (event.keyCode === 77) { // M\n        toggleMute(!isMuted);\n      }\n    }, false);\n  });\n\n  return (\n    <div className=\"main-container\">\n      <Modal isOpen={showSaveModal} autoFocus>\n        <ModalHeader toggle={toggleSaveModal}>儲存 Save & Update</ModalHeader>\n        <ModalBody>\n          <InputGroup>\n            <Input placeholder=\"Title...\" autoFocus value={newListTitle} onChange={(event)=>setNewListTitle(event.target.value)}/>\n          </InputGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleSaveModal}>Cancel</Button>\n          <Button color=\"primary\" disabled={newListTitle.length < 1} onClick={()=>saveList(true)}>Save As New</Button>\n          <Button color=\"primary\" disabled={newListTitle.length < 1} onClick={()=>saveList(false)}>Update</Button>\n        </ModalFooter>\n      </Modal>\n\n      <Navbar color=\"black\" dark expand=\"md\">\n        <NavbarBrand href=\"#\">都看看</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"#\" active={mode === '2x2'} onClick={()=>selectMode('2x2')}>\n                <FaThLarge />\n                2x2\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"#\" active={mode === '3x3'} onClick={()=>selectMode('3x3')}>\n                <FaTh />\n                3x3\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"#\" active={isEditing} onClick={edit}>\n                {!isEditing?\n                  <><FaEdit />編輯 Edit</>:\n                  <div className=\"blink\" ><FaSave />儲存 Save</div>\n                }\n              </NavLink>\n            </NavItem>\n            {/* <NavItem>\n              <NavLink href=\"#\" onClick={toggleSaveModal}>\n                <FaSave />\n                儲存 Save\n              </NavLink>\n            </NavItem> */}\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                <FaList />\n                {list[currentListIndex].title}\n              </DropdownToggle>\n              <DropdownMenu right>\n                {list.map((item, index)=>(\n                  <DropdownItem\n                    key={index}\n                    onClick={()=>selectListItem(index)}>\n                    {item.title}\n                  </DropdownItem>\n                ))}\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          <Nav navbar>\n            <NavItem>\n              <NavLink href=\"#\" active={isMuted} onClick={()=>toggleMute(!isMuted)}>\n                {isMuted?\n                  <FaVolumeMute className=\"blink\"/>:<FaVolumeUp />\n                }\n              </NavLink>\n            </NavItem>\n            <NavbarText>\n              <FaExclamationCircle />\n              移動滑鼠播放聲音 Move your mouse over video to play the sound\n            </NavbarText>\n            <NavItem>\n              <NavLink href=\"https://github.com/chunyenHuang/watch-all\" target=\"_blank\">\n                <FaGithub />\n                Github\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n      <div className=\"channels-container\">\n        <div className=\"channels-container-box\">\n          <Channels\n            mode={mode}\n            isEditing={isEditing}\n            channels={currentChannels}\n            mute={isMuted}\n          />\n        </div>\n      </div>\n    </div>);\n};\n\nexport default App;\n","export default [{\n  title: '新聞 News',\n  channels: [\n    'https://www.youtube.com/watch?v=R2iMq5LKXco', // 東森\n    'https://www.youtube.com/watch?v=EB4g7wecgTI', // 三立\n    'https://www.youtube.com/watch?v=_QbRXRnHMVY', // 中天\n    'https://www.youtube.com/watch?v=9Auq9mYxFEE', // Sky News\n    'https://www.youtube.com/watch?v=2mCSYvcfhtc', // TVBS\n    'https://www.youtube.com/watch?v=TCnaIE_SAtM', // 中視\n    'https://www.youtube.com/watch?v=ylYJSBUgaMA', // 民視\n    'https://www.youtube.com/watch?v=as1ZQ0t3Kdg', // CBS\n    'https://www.youtube.com/watch?v=B7Zp3d6xXWw', // 寰宇\n    // 'https://www.youtube.com/watch?v=NbjI0cARzjQ', // 台視 not available\n    // 'https://www.youtube.com/watch?v=TL8mmew3jb8', // 華視\n    // 'https://www.youtube.com/watch?v=MIQ_BlHmpgY', // 東森財經\n  ],\n}, {\n  title: '貓科 Felidae',\n  channels: [\n    'https://www.youtube.com/watch?v=abuAUjFv88s',\n    'https://www.youtube.com/watch?v=DCiUhrxnOjI',\n    'https://www.youtube.com/watch?v=W86cTIoMv2U',\n    'https://www.youtube.com/watch?v=BZC2nWJblhk',\n    'https://www.youtube.com/watch?v=rsRj5Eymjxw',\n    'https://www.youtube.com/watch?v=qeUM1WDoOGY',\n    'https://www.youtube.com/watch?v=K83BKNxgg7w',\n    'https://www.youtube.com/watch?v=Yhj5gjcY77I',\n    'https://www.youtube.com/watch?v=vl-PcTA9HHg',\n  ],\n}, {\n  title: '背景音樂 Background Music',\n  channels: [\n    'https://www.youtube.com/watch?v=qycqF1CWcXg',\n    'https://www.youtube.com/watch?v=PeQSCzrByo4',\n    'https://www.youtube.com/watch?v=GFPrPhyQ6y8',\n    'https://www.youtube.com/watch?v=LLmm23EZ5qI',\n    'https://www.youtube.com/watch?v=QdRQwlgJC-Y',\n    'https://www.youtube.com/watch?v=3EgpMgxRvxA',\n    'https://www.youtube.com/watch?v=4UvrnbDDec4',\n    'https://www.youtube.com/watch?v=Qc2pBTfZODM',\n    'https://www.youtube.com/watch?v=KJfdIOnUHXI',\n  ],\n}];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}